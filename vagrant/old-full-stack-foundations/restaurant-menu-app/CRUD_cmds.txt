from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker 
from database_setup import Restaurant, Base, MenuItem
engine = create_engine('sqlite:///restaurantmenu.db')
Base.metadata.bind = engine
DBSession = sessionmaker(bind=engine)
session = DBSession()

CRUD.Create:
variable_name = ClassName[Restaurant](name = "Urban Burger")
e.g. 
    menuItem2 = MenuItem(name = "Veggie Burger", description = "Juicy grilled veggie patty with tomato mayo and lettuce", price = "$7.50", course = "Entree", restaurant = restaurant1)
session.add(variable_name[menuItem2])
session.commit()

CRUD.Read:
variable_name = session.query(ClassName).all()
for stuff in variable_name:
    print(stuff.name)

CRUD.Update:
The update has four steps: Find entry, reset values, add to session and session.commit().
Use the .filter_by() function to find entry, like
veggieBurgers = session.query(MenuItem).filter_by(name = 'Veggie Burger')
To read: for veggieBurger in veggieBurgers:
            print veggieBurger.id
            print veggieBurger.price
            print veggieBurger.restaurant.name
            print "\n"
Now that you know the id, you can select by id and add the 'one()' function to return just one of object instead of a list of iterable/the whole query code. e.g.
UrbanVeggieBurger = session.query(MenuItem).filter_by(id = 1).one()
print(UrbanVeggieBurger.price/name/restaurant.name)
UrbanVeggieBurger.price/name/restaurant.name = new_value
session.add(UrbanVeggieBurger.price/name/restaurant.name)
session.commit()

CRUD.Delete
Delete is a three step process: First find, delete and commit. like:
variable_name = session.query(OurClass).filter_by(name = 'name').one()
session.add(UrbanVeggieBurger.price/name/restaurant.name)
session.commit()